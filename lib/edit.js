/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/tinycolor2/tinycolor.js":
/*!**********************************************!*\
  !*** ./node_modules/tinycolor2/tinycolor.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif ( true && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {return tinycolor;}).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n// Browser: Expose to window\nelse {}\n\n})(Math);\n\n\n//# sourceURL=webpack:///./node_modules/tinycolor2/tinycolor.js?");

/***/ }),

/***/ "./src/filters.js":
/*!************************!*\
  !*** ./src/filters.js ***!
  \************************/
/*! exports provided: OutlineFilter, GridFilter, HFilter, SFilter, BFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OutlineFilter\", function() { return OutlineFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"GridFilter\", function() { return GridFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HFilter\", function() { return HFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SFilter\", function() { return SFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BFilter\", function() { return BFilter; });\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// Outline filter\nvar OutlineFilter =\n/*#__PURE__*/\nfunction (_PIXI$AbstractFilter) {\n  _inherits(OutlineFilter, _PIXI$AbstractFilter);\n\n  function OutlineFilter() {\n    _classCallCheck(this, OutlineFilter);\n\n    var vertexShader = null;\n    var fragmentShader = \"\\n\\nprecision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D texture;\\nuniform vec4 dimensions;\\nuniform vec4 newcolor;\\n\\n#define THRESH 32.0\\n#define linewidth 1.0\\n\\n#define downsample(X) step(THRESH/255.0, X)\\n#define is_black(X) (X.rgb == vec3(0.0) && X.a == 1.0)\\n#define is_white(X) (!is_black(X))\\n\\nvoid main(void) {\\n  vec4 cur = downsample(texture2D(texture, vTextureCoord));\\n  vec4 up = downsample(texture2D(texture, vTextureCoord + vec2(0.0, -linewidth)/dimensions.xy));\\n  vec4 down = downsample(texture2D(texture, vTextureCoord + vec2(0.0, linewidth)/dimensions.xy));\\n  vec4 left = downsample(texture2D(texture, vTextureCoord + vec2(-linewidth, 0.0)/dimensions.xy));\\n  vec4 right = downsample(texture2D(texture, vTextureCoord + vec2(linewidth, 0.0)/dimensions.xy));\\n\\n  // vec4 ul = downsample(texture2D(texture, vTextureCoord + vec2(-linewidthless, -linewidthless)/dimensions.xy));\\n  // vec4 dl = downsample(texture2D(texture, vTextureCoord + vec2(-linewidthless, +linewidthless)/dimensions.xy));\\n  // vec4 ur = downsample(texture2D(texture, vTextureCoord + vec2(+linewidthless, -linewidthless)/dimensions.xy));\\n  // vec4 dr = downsample(texture2D(texture, vTextureCoord + vec2(+linewidthless, +linewidthless)/dimensions.xy));\\n\\n  if (is_black(cur) && (is_white(up) || is_white(down) || is_white(left) || is_white(right))) { //} || is_white(ul) || is_white(dl) || is_white(ur) || is_white(dr))) {\\n    gl_FragColor = newcolor;\\n  } else {\\n    gl_FragColor = vec4(0.0);\\n  }\\n}\\n\\n    \";\n    return _possibleConstructorReturn(this, _getPrototypeOf(OutlineFilter).call(this, vertexShader, fragmentShader, {\n      dimensions: {\n        type: '4fv',\n        value: new Float32Array([0, 0, 0, 0])\n      },\n      newcolor: {\n        type: '4fv',\n        value: new Float32Array([0, 0, 0, 0])\n      }\n    }));\n  }\n\n  _createClass(OutlineFilter, [{\n    key: \"setColor\",\n    value: function setColor(r, g, b, a) {\n      this.uniforms.newcolor.value = new Float32Array([r, g, b, a]);\n    }\n  }]);\n\n  return OutlineFilter;\n}(PIXI.AbstractFilter); // Grid filter\n\nvar GridFilter =\n/*#__PURE__*/\nfunction (_PIXI$AbstractFilter2) {\n  _inherits(GridFilter, _PIXI$AbstractFilter2);\n\n  function GridFilter() {\n    _classCallCheck(this, GridFilter);\n\n    var vertexShader = null;\n    var fragmentShader = \"\\n\\nprecision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nuniform sampler2D texture;\\nuniform vec4 dimensions;\\nuniform float radius;\\n\\nvoid main(void) {\\n  vec2 trueCoords = (vTextureCoord * dimensions.xy) + vec2(1.0, 1.0);\\n  vec4 cur = texture2D(texture, vTextureCoord);\\n  if (step(1.0, mod(trueCoords.x, radius)) == 0.0 || step(1.0, mod(trueCoords.y, radius)) == 0.0) {\\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.85);\\n    // gl_FragColor = vec4(0.0, 0.0, 0.0, 0.25);\\n  } else {\\n    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\n  }\\n}\\n\\n    \";\n    return _possibleConstructorReturn(this, _getPrototypeOf(GridFilter).call(this, vertexShader, fragmentShader, {\n      dimensions: {\n        type: '4fv',\n        value: new Float32Array([0, 0, 0, 0])\n      },\n      radius: {\n        type: 'f',\n        value: 1.0\n      }\n    }));\n  }\n\n  return GridFilter;\n}(PIXI.AbstractFilter); // HSB filter\n\nvar HFilter =\n/*#__PURE__*/\nfunction (_PIXI$AbstractFilter3) {\n  _inherits(HFilter, _PIXI$AbstractFilter3);\n\n  function HFilter() {\n    _classCallCheck(this, HFilter);\n\n    var fragmentShader = \"\\n\\nprecision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nuniform vec4 dimensions;\\n\\n// http://gamedev.stackexchange.com/questions/59797/glsl-shader-change-hue-saturation-brightness\\n\\nvec3 rgb2hsv(vec3 c) {\\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\\n\\n    float d = q.x - min(q.w, q.y);\\n    float e = 1.0e-10;\\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\\n}\\n\\nvec3 hsv2rgb(vec3 c) {\\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nfloat roundto (float v, float by) {\\n  return floor(by*v)/by;\\n}\\n\\nvoid main(void) {\\n  gl_FragColor = vec4(hsv2rgb(vec3(roundto(vTextureCoord.y, 16.0), 1.0, 1.0)), 1.0);\\n}\\n\\n    \";\n    return _possibleConstructorReturn(this, _getPrototypeOf(HFilter).call(this, null, fragmentShader, {\n      dimensions: {\n        type: '4fv',\n        value: new Float32Array([0, 0, 0, 0])\n      }\n    }));\n  }\n\n  return HFilter;\n}(PIXI.AbstractFilter);\nvar SFilter =\n/*#__PURE__*/\nfunction (_PIXI$AbstractFilter4) {\n  _inherits(SFilter, _PIXI$AbstractFilter4);\n\n  function SFilter() {\n    _classCallCheck(this, SFilter);\n\n    var fragmentShader = \"\\n\\nprecision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nuniform vec4 dimensions;\\nuniform float h;\\nuniform float b;\\n\\n// http://gamedev.stackexchange.com/questions/59797/glsl-shader-change-hue-saturation-brightness\\n\\nvec3 rgb2hsv(vec3 c) {\\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\\n\\n    float d = q.x - min(q.w, q.y);\\n    float e = 1.0e-10;\\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\\n}\\n\\nvec3 hsv2rgb(vec3 c) {\\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nvec4 roundto (vec4 v, float by) {\\n  return floor(by*v)/by;\\n}\\n\\nvoid main(void) {\\n  // gl_FragColor = vec4(hsv2rgb(vec3(h, roundto(vTextureCoord.y, 16.0), b)), 1.0);\\n  gl_FragColor = vec4(hsv2rgb(vec3(h, vTextureCoord.y, 0.5 + (vTextureCoord.y*.5))), 1.0);\\n  // gl_FragColor = roundto(gl_FragColor, 16.0);\\n}\\n\\n    \";\n    return _possibleConstructorReturn(this, _getPrototypeOf(SFilter).call(this, null, fragmentShader, {\n      dimensions: {\n        type: '4fv',\n        value: new Float32Array([0, 0, 0, 0])\n      },\n      h: {\n        type: 'f',\n        value: 0.0\n      },\n      b: {\n        type: 'f',\n        value: 1.0\n      }\n    }));\n  }\n\n  return SFilter;\n}(PIXI.AbstractFilter);\nvar BFilter =\n/*#__PURE__*/\nfunction (_PIXI$AbstractFilter5) {\n  _inherits(BFilter, _PIXI$AbstractFilter5);\n\n  function BFilter() {\n    _classCallCheck(this, BFilter);\n\n    var fragmentShader = \"\\n\\nprecision mediump float;\\n\\nvarying vec2 vTextureCoord;\\nuniform vec4 dimensions;\\nuniform float h;\\nuniform float s;\\n\\n// http://gamedev.stackexchange.com/questions/59797/glsl-shader-change-hue-saturation-brightness\\n\\nvec3 rgb2hsv(vec3 c) {\\n    vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\n    vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\\n    vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\\n\\n    float d = q.x - min(q.w, q.y);\\n    float e = 1.0e-10;\\n    return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\\n}\\n\\nvec3 hsv2rgb(vec3 c) {\\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nfloat roundto (float v, float by) {\\n  return floor(by*v)/by;\\n}\\n\\nvoid main(void) {\\n  gl_FragColor = vec4(hsv2rgb(vec3(h, s, roundto(vTextureCoord.y, 16.0))), 1.0);\\n}\\n\\n    \";\n    return _possibleConstructorReturn(this, _getPrototypeOf(BFilter).call(this, null, fragmentShader, {\n      dimensions: {\n        type: '4fv',\n        value: new Float32Array([0, 0, 0, 0])\n      },\n      h: {\n        type: 'f',\n        value: 0.0\n      },\n      s: {\n        type: 'f',\n        value: 1.0\n      }\n    }));\n  }\n\n  return BFilter;\n}(PIXI.AbstractFilter);\n\n//# sourceURL=webpack:///./src/filters.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _shapes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shapes */ \"./src/shapes.js\");\n/* harmony import */ var _filters__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./filters */ \"./src/filters.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util */ \"./src/util.js\");\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tinycolor2 */ \"./node_modules/tinycolor2/tinycolor.js\");\n/* harmony import */ var tinycolor2__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(tinycolor2__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nvar size = {\n  x: 50,\n  y: 50\n};\nvar frameSize = {\n  x: 300,\n  y: 300\n}; // create a renderer instance\n\nvar renderer = _shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].renderer;\nrenderer.backgroundColor = 0xaaaaaa;\n$('#panel-graphics').append(renderer.view);\nvar state;\n\nif (localStorage.state) {\n  try {\n    state = JSON.parse(localStorage.state);\n  } catch (e) {}\n}\n\nif (!state) {\n  state = {\n    brushSize: 0,\n    alias: false,\n    rotation: 0,\n    brushPainting: false,\n    brushColor: '#000000',\n    zoom: 4.0,\n    gridVisible: false,\n    cursorX: 0,\n    cursorY: 0,\n    image: null\n  };\n}\n\nconsole.log('Initial state:', state);\n\nfunction saveGraphic() {\n  _shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite.visible = false;\n  render();\n  state.image = bgcache.getBase64();\n  _shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite.visible = true;\n  render();\n}\n\nfunction alterState(mod) {\n  for (var k in mod) {\n    if (!state.hasOwnProperty(k)) {\n      throw new Error('Key \"' + k + '\" missing');\n    }\n\n    state[k] = mod[k];\n  }\n\n  localStorage.state = JSON.stringify(state);\n}\n\nvar background = new PIXI.Graphics();\nbackground.beginFill(0xffffff);\nbackground.drawRect(0, 0, size.x, size.y);\nvar container = new PIXI.Container();\n\nif (state.image) {\n  try {\n    var tex = PIXI.Texture.fromImage(state.image);\n    tex.on('update', function () {\n      start();\n    });\n    background = new PIXI.Sprite(tex);\n  } catch (e) {\n    console.error(e.stack);\n    state.image = null;\n  }\n}\n\nif (!state.image) {\n  setTimeout(start);\n}\n\ncontainer.addChild(background);\nvar bgcache = new PIXI.RenderTexture(renderer, size.x, size.y, PIXI.SCALE_MODES.NEAREST);\nbgcache.render(container);\nvar bgcacheSprite = new PIXI.Sprite(bgcache);\nbgcacheSprite.interactive = true;\nvar gridGraphics = new PIXI.Graphics();\ngridGraphics.beginFill(0xFFFF00);\ngridGraphics.drawRect(0, 0, size.x, size.y);\ngridGraphics.visible = true; // gridGraphics.visible = false;\n\nvar grid = new _filters__WEBPACK_IMPORTED_MODULE_1__[\"GridFilter\"]();\ngrid.uniforms.radius.value = 1.0;\ngridGraphics.filters = [grid];\nvar realContainer = new PIXI.Container();\nrealContainer.addChild(bgcacheSprite); // realContainer.scale.x = 5.0;\n// realContainer.scale.y = 5.0;\n\nrealContainer.scale.x = 1.0;\nrealContainer.scale.y = 1.0;\nrealContainer.position.x = frameSize.x / 2 + -size.x / 2;\nrealContainer.position.y = frameSize.y / 2 + -size.y / 2;\nvar lastCoords = null;\n\nfunction setZoom(value) {\n  alterState({\n    zoom: value\n  });\n  realContainer.scale.x = value;\n  realContainer.scale.y = value;\n  realContainer.position.x = frameSize.x / 2 + -(size.x * value / 2);\n  realContainer.position.y = frameSize.y / 2 + -(size.y * value / 2);\n  grid.uniforms.radius.value = value;\n  gridGraphics.visible = value >= 4.0;\n  $('#toolconf-zoom').val(value);\n  $('#toolconf-zoom-readout').text(value); // $('toolconf-brush-grid').prop('enabled', value >= 4.0);\n\n  render();\n}\n\nfunction resize() {\n  setZoom(state.zoom);\n}\n\nfunction setBrushSize(value) {\n  alterState({\n    brushSize: value\n  });\n  $('#toolconf-brush-size').val(value);\n  $('#toolconf-brush-size-readout').text(value);\n  render();\n}\n\nfunction render() {\n  // if (state.brushPainting) {\n  _shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].update(state.alias, state.brushSize, state.rotation, state.brushColor);\n  _shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite.x = state.cursorX - _shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite.width / 2;\n  _shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite.y = state.cursorY - _shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite.height / 2; // }\n\n  bgcache.render(container);\n  renderer.render(realContainer);\n}\n\nfunction setBrushRotation(rotate) {\n  alterState({\n    rotation: rotate\n  });\n}\n\nfunction updateShape(coords) {\n  alterState({\n    cursorX: coords.x - .5\n  });\n  alterState({\n    cursorY: coords.y - .5\n  });\n\n  if (state.brushPainting) {\n    // RADIUS_STATE = Math.sqrt(Math.pow(coords.x - CIRC_CENTER.x, 2) + Math.pow(coords.y - CIRC_CENTER.y, 2));\n    setBrushRotation(Math.atan2(coords.y - size.y / 2, coords.x - size.x / 2));\n  }\n}\n\nfunction addShape() {\n  container.addChild(_shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite);\n}\n\nfunction commitShape() {\n  container.removeChild(_shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite);\n  container.removeChild(background);\n\n  try {\n    background.destroy(true, true);\n  } catch (e) {}\n\n  background = new PIXI.Sprite(PIXI.Texture.fromCanvas(bgcache.getCanvas()));\n  container.addChild(background); // When re-displaying\n\n  container.addChild(_shapes__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sprite);\n}\n\nfunction brush(coords) {\n  addShape();\n  updateShape(coords);\n  render();\n  commitShape();\n}\n\nfunction getCoords(from, item) {\n  //TODO why is this so gross\n  var coords = item.data.getLocalPosition(from); // coords.x -= .4;\n  // coords.y -= .4;\n\n  return coords;\n}\n/**\n * Event handlers\n */\n\n\n$('#toolconf-zoom').on('change mousedown mouseup mousemove', function () {\n  var checkbox = this;\n  setTimeout(function () {\n    var value = $(checkbox).val();\n    setZoom(value);\n  }, 0);\n});\n$('#toolconf-brush-size').on('change mousedown mouseup mousemove', function () {\n  var checkbox = this;\n  setTimeout(function () {\n    var value = $(checkbox).val();\n    setBrushSize(value);\n  }, 0);\n});\n\nfunction setGrid(value) {\n  alterState({\n    gridVisible: value\n  });\n\n  if (value) {\n    realContainer.addChild(gridGraphics);\n  } else {\n    realContainer.removeChild(gridGraphics);\n  }\n\n  $('#toolconf-brush-grid').prop('checked', value);\n}\n\nfunction setAlias(value) {\n  alterState({\n    alias: value\n  });\n  $('#toolconf-brush-alias').prop('checked', value);\n}\n\nfunction setBrushColor(color) {\n  alterState({\n    brushColor: color\n  });\n}\n\nfunction triggerResize() {\n  requestAnimationFrame(function () {\n    frameSize = {\n      x: $(renderer.view).parent().width(),\n      y: $(renderer.view).parent().height()\n    };\n    renderer.resize(frameSize.x, frameSize.y);\n    console.log(frameSize.x, frameSize.y);\n    resize();\n  });\n}\n\nfunction attachListeners() {\n  $('#toolconf-brush-grid').on('change', function () {\n    if ($(this).prop('checked')) {\n      setGrid(true);\n      render();\n    } else {\n      setGrid(false);\n      render();\n    }\n  });\n  $('#toolconf-brush-alias').on('change', function () {\n    if ($(this).prop('checked')) {\n      setAlias(true);\n    } else {\n      setAlias(false);\n    }\n  });\n  $('#panel-graphics').on('mousewheel', function (event) {\n    if (event.deltaY > 0) {\n      if (event.altKey) {\n        setBrushSize(Math.min(Math.max(state.brushSize - 1, 1), 10));\n      } else {\n        setZoom(Math.min(state.zoom + 1, 10));\n      }\n    } else if (event.deltaY < 0) {\n      if (event.altKey) {\n        setBrushSize(Math.min(Math.max(state.brushSize + 1, 1), 10));\n      } else {\n        setZoom(Math.max(state.zoom - 1, 1));\n      }\n    }\n  });\n\n  window.onkeydown = function (e) {\n    if (e.keyCode == 65) {\n      e.preventDefault();\n      $('#toolconf-brush-alias').prop('checked', !$('#toolconf-brush-alias').prop('checked'));\n      $('#toolconf-brush-alias').trigger('change');\n    }\n\n    if (e.keyCode == 71) {\n      e.preventDefault();\n      $('#toolconf-brush-grid').prop('checked', !$('#toolconf-brush-grid').prop('checked'));\n      $('#toolconf-brush-grid').trigger('change');\n    }\n\n    render();\n  };\n\n  bgcacheSprite.mousedown = function (item) {\n    alterState({\n      brushPainting: true\n    });\n    var coords = getCoords(bgcacheSprite, item); // addShape(coords);\n    // updateShape(coords);\n\n    brush(coords);\n    lastCoords = coords;\n    render();\n  };\n\n  window.onmouseup = function (item) {\n    alterState({\n      brushPainting: false\n    }); // commitShape();\n\n    lastCoords = null; // render();\n\n    saveGraphic();\n  };\n\n  bgcacheSprite.mousemove = function (item) {\n    var coords = getCoords(bgcacheSprite, item);\n\n    if (item.data.originalEvent.shiftKey && lastCoords) {\n      coords.y = lastCoords.y;\n    }\n\n    updateShape(coords);\n\n    if (lastCoords) {\n      var points = Object(_util__WEBPACK_IMPORTED_MODULE_2__[\"calculateLine\"])(lastCoords, coords);\n      lastCoords = coords;\n      points.forEach(function (p) {\n        brush(p);\n      });\n    }\n\n    render();\n  };\n\n  $(window).on('resize', triggerResize);\n}\n/**\n * Start\n */\n\n\nfunction start() {\n  state.brushPainting = false;\n  setGrid(state.gridVisible);\n  setAlias(state.alias);\n  setZoom(state.zoom);\n  setBrushSize(state.brushSize);\n  addShape();\n  triggerResize();\n  attachListeners();\n}\n\nfunction colorPicker(filter) {\n  var OHNO = new PIXI.WebGLRenderer(32, 256);\n  $(OHNO.view).width(32).height(256);\n  var graphics = new PIXI.Graphics();\n  graphics.beginFill(0xFFFF00);\n  graphics.drawRect(0, 0, 32, 256);\n  graphics.filters = [filter];\n  graphics.interactive = true;\n  var container = new PIXI.Container();\n  container.addChild(graphics);\n  var marker = new PIXI.Graphics();\n  marker.beginFill(0x000000);\n  marker.drawRect(0, -3, 16, 6);\n  container.addChild(marker);\n  marker.x = 0;\n\n  function render() {\n    OHNO.render(container);\n  }\n\n  ;\n  return {\n    view: OHNO.view,\n    render: render,\n    filter: filter,\n    target: graphics,\n    height: 256,\n    marker: marker\n  };\n}\n\n;\n\n(function () {\n  var h = colorPicker(new _filters__WEBPACK_IMPORTED_MODULE_1__[\"HFilter\"]());\n  var s = colorPicker(new _filters__WEBPACK_IMPORTED_MODULE_1__[\"SFilter\"]());\n  var b = colorPicker(new _filters__WEBPACK_IMPORTED_MODULE_1__[\"BFilter\"]());\n\n  function getVal(c, event) {\n    return getCoords(c.target, event).y / c.height;\n  }\n\n  var hval = 1.0;\n  var sval = 1.0;\n  var bval = 1.0;\n\n  function updateColor() {\n    s.filter.uniforms.h.value = hval;\n    s.filter.uniforms.b.value = bval;\n    b.filter.uniforms.h.value = hval;\n    b.filter.uniforms.s.value = sval;\n    h.marker.y = hval * h.height;\n    s.marker.y = sval * s.height;\n    b.marker.y = bval * b.height;\n    var color = tinycolor2__WEBPACK_IMPORTED_MODULE_3___default.a.fromRatio({\n      h: hval,\n      s: sval,\n      v: bval\n    }).toRgb(); // console.log(hval, sval, bval);\n\n    var brushColor = '#' + ('000000' + ((color.r << 16) + (color.g << 8) + color.b).toString(16)).slice(-6);\n    alterState({\n      brushColor: brushColor\n    });\n    $('#ohno').css('backgroundColor', brushColor);\n    h.render();\n    s.render();\n    b.render();\n  }\n\n  $(h.view).on('mousewheel', function (event) {\n    var measure = 2 / 255;\n    event.preventDefault();\n\n    if (event.deltaY > 0) {\n      hval = Math.min(hval + measure, 1.0);\n    } else if (event.deltaY < 0) {\n      hval = Math.max(hval - measure, 0.0);\n    }\n\n    updateColor();\n  });\n  $(s.view).on('mousewheel', function (event) {\n    var measure = 2 / 255;\n    event.preventDefault();\n\n    if (event.deltaY > 0) {\n      sval = Math.min(sval + measure, 1.0);\n    } else if (event.deltaY < 0) {\n      sval = Math.max(sval - measure, 0.0);\n    }\n\n    updateColor();\n  });\n  $(b.view).on('mousewheel', function (event) {\n    var measure = 2 / 255;\n    event.preventDefault();\n\n    if (event.deltaY > 0) {\n      bval = Math.min(bval + measure, 1.0);\n    } else if (event.deltaY < 0) {\n      bval = Math.max(bval - measure, 0.0);\n    }\n\n    updateColor();\n  });\n\n  h.target.mouseup = function (event) {\n    hval = getVal(h, event);\n    updateColor();\n  };\n\n  s.target.mouseup = function (event) {\n    sval = getVal(s, event);\n    updateColor();\n  };\n\n  b.target.mouseup = function (event) {\n    bval = getVal(b, event);\n    updateColor();\n  };\n\n  $('#ohno').append(h.view).append(s.view).append(b.view);\n  updateColor();\n})();\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ }),

/***/ "./src/shapes.js":
/*!***********************!*\
  !*** ./src/shapes.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _filters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./filters */ \"./src/filters.js\");\n\nvar bgrenderer = new PIXI.WebGLRenderer(600, 600);\nvar lastTexture = new PIXI.RenderTexture(bgrenderer, 100, 100, PIXI.SCALE_MODES.NEAREST);\nvar out = new PIXI.Sprite(lastTexture);\nvar CAN_graphics = new PIXI.Graphics();\nvar CAN_sprite = new PIXI.Container();\nCAN_sprite.addChild(CAN_graphics);\nvar outline = new _filters__WEBPACK_IMPORTED_MODULE_0__[\"OutlineFilter\"]();\n\nfunction drawStar(ctx, cx, cy, spikes, outerRadius, innerRadius) {\n  var rot = Math.PI / 2 * 3;\n  var x = cx;\n  var y = cy;\n  var step = Math.PI / spikes; // ctx.beginPath();\n\n  ctx.moveTo(cx, cy - outerRadius);\n\n  for (var i = 0; i < spikes; i++) {\n    x = cx + Math.cos(rot) * outerRadius;\n    y = cy + Math.sin(rot) * outerRadius;\n    ctx.lineTo(x, y);\n    rot += step;\n    x = cx + Math.cos(rot) * innerRadius;\n    y = cy + Math.sin(rot) * innerRadius;\n    ctx.lineTo(x, y);\n    rot += step;\n  }\n\n  ctx.lineTo(cx, cy - outerRadius);\n  ctx.stroke();\n}\n\nfunction drawCanvasCircle(alias, radius, rot, stroke, thickness, dofill) {\n  radius -= 1;\n\n  if (alias) {\n    radius = Math.max(Math.floor(radius) + .3, .3);\n  } else {\n    radius = Math.max(radius, .5);\n  }\n\n  var len = Math.floor(radius * 2) + 10;\n  CAN_graphics.clear();\n\n  if (alias && !dofill) {\n    CAN_graphics.beginFill(0xffffff, 1.0);\n    CAN_graphics.drawRect(0, 0, len, len);\n    CAN_graphics.endFill();\n    CAN_graphics.beginFill(0x000000);\n  } else {\n    CAN_graphics.beginFill(0x000000, 0.0);\n    CAN_graphics.drawRect(0, 0, len, len);\n    CAN_graphics.endFill();\n    CAN_graphics.beginFill(parseInt(stroke.substr(1), 16));\n  }\n\n  if (alias) {\n    CAN_graphics.drawCircle(len / 2 + .5, len / 2 + .5, radius);\n  } else {\n    CAN_graphics.drawCircle(len / 2 + .75, len / 2, radius);\n  }\n\n  CAN_graphics.endFill();\n  return len;\n}\n\nfunction circleSprite(alias, radius, rot, stroke) {\n  var dofill = true;\n  var len = drawCanvasCircle(alias, radius, rot, stroke, 1, dofill);\n\n  if (alias && !dofill) {\n    outline.setColor(parseInt(stroke.substr(1).substr(0, 2), 16) / 255.0, parseInt(stroke.substr(1).substr(2, 2), 16) / 255.0, parseInt(stroke.substr(1).substr(4, 2), 16) / 255.0, 1.0);\n    CAN_sprite.filters = [outline];\n  } else {\n    CAN_sprite.filters = null;\n  }\n\n  CAN_graphics.x = 100 / 2 - len / 2;\n  CAN_graphics.y = 100 / 2 - len / 2;\n\n  if (alias) {\n    lastTexture.clear();\n    lastTexture.render(CAN_sprite);\n    out.texture = lastTexture;\n  } else {\n    out.texture = CAN_graphics.generateTexture();\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  sprite: out,\n  update: circleSprite,\n  renderer: bgrenderer\n});\n\n//# sourceURL=webpack:///./src/shapes.js?");

/***/ }),

/***/ "./src/util.js":
/*!*********************!*\
  !*** ./src/util.js ***!
  \*********************/
/*! exports provided: calculateLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"calculateLine\", function() { return calculateLine; });\nfunction calculateLine(A, B) {\n  var x0 = A.x;\n  var x1 = B.x;\n  var y0 = A.y;\n  var y1 = B.y;\n  var ret = [];\n  var dx = Math.abs(x1 - x0);\n  var dy = Math.abs(y1 - y0);\n  var sx = x0 < x1 ? 1 : -1;\n  var sy = y0 < y1 ? 1 : -1;\n  var err = dx - dy;\n\n  while (true) {\n    ret.push({\n      x: x0,\n      y: y0\n    });\n\n    if ((sx > 0 ? x0 >= x1 - 1 : x0 <= x1 + 1) && (sy > 0 ? y0 >= y1 - 1 : y0 <= y1 + 1)) {\n      break;\n    }\n\n    var e2 = 2 * err;\n\n    if (e2 > -dy) {\n      err -= dy;\n      x0 += sx;\n    }\n\n    if (e2 < dx) {\n      err += dx;\n      y0 += sy;\n    }\n  }\n\n  return ret;\n}\n\n//# sourceURL=webpack:///./src/util.js?");

/***/ })

/******/ });